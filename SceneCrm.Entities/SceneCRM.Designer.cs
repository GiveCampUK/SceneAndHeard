//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "FK_Course_CourseType", "CourseType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SceneCrm.Entities.CourseType), "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.Course), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Course_Term", "Term", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SceneCrm.Entities.Term), "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.Course), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CourseAttendance_Course", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SceneCrm.Entities.Course), "CourseAttendance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.CourseAttendance), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CourseVolunteer_Course", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SceneCrm.Entities.Course), "CourseVolunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.CourseVolunteer), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CourseAttendance_Child", "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SceneCrm.Entities.Student), "CourseAttendance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.CourseAttendance), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CourseVolunteer_Job", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SceneCrm.Entities.Job), "CourseVolunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.CourseVolunteer), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CourseVolunteer_Volunteer", "Volunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SceneCrm.Entities.Volunteer), "CourseVolunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.CourseVolunteer), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CrbCheck_Volunteer", "Volunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SceneCrm.Entities.Volunteer), "CrbCheck", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.CrbCheck), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PlayVolunteer_Job", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SceneCrm.Entities.Job), "PlayVolunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.PlayVolunteer), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ProductionVolunteer_Job", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SceneCrm.Entities.Job), "ProductionVolunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.ProductionVolunteer), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PlayVolunteer_Play", "Play", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SceneCrm.Entities.Play), "PlayVolunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.PlayVolunteer), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PlayVolunteer_Volunteer", "Volunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SceneCrm.Entities.Volunteer), "PlayVolunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.PlayVolunteer), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ProductionVolunteer_Production", "Production", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SceneCrm.Entities.Production), "ProductionVolunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.ProductionVolunteer), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ProductionVolunteer_Volunteer", "Volunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SceneCrm.Entities.Volunteer), "ProductionVolunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.ProductionVolunteer), true)]
[assembly: EdmRelationshipAttribute("Model", "VolunteerCapability", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.Job), "Volunteer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.Volunteer))]
[assembly: EdmRelationshipAttribute("Model", "FK_Performance_Production", "Production", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SceneCrm.Entities.Production), "Performance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SceneCrm.Entities.Performance), true)]

#endregion

namespace SceneCrm.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SceneCRM : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SceneCRM object using the connection string found in the 'SceneCRM' section of the application configuration file.
        /// </summary>
        public SceneCRM() : base("name=SceneCRM", "SceneCRM")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SceneCRM object.
        /// </summary>
        public SceneCRM(string connectionString) : base(connectionString, "SceneCRM")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SceneCRM object.
        /// </summary>
        public SceneCRM(EntityConnection connection) : base(connection, "SceneCRM")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Course> Courses
        {
            get
            {
                if ((_Courses == null))
                {
                    _Courses = base.CreateObjectSet<Course>("Courses");
                }
                return _Courses;
            }
        }
        private ObjectSet<Course> _Courses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CourseAttendance> CourseAttendances
        {
            get
            {
                if ((_CourseAttendances == null))
                {
                    _CourseAttendances = base.CreateObjectSet<CourseAttendance>("CourseAttendances");
                }
                return _CourseAttendances;
            }
        }
        private ObjectSet<CourseAttendance> _CourseAttendances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CourseType> CourseTypes
        {
            get
            {
                if ((_CourseTypes == null))
                {
                    _CourseTypes = base.CreateObjectSet<CourseType>("CourseTypes");
                }
                return _CourseTypes;
            }
        }
        private ObjectSet<CourseType> _CourseTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CourseVolunteer> CourseVolunteers
        {
            get
            {
                if ((_CourseVolunteers == null))
                {
                    _CourseVolunteers = base.CreateObjectSet<CourseVolunteer>("CourseVolunteers");
                }
                return _CourseVolunteers;
            }
        }
        private ObjectSet<CourseVolunteer> _CourseVolunteers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CrbCheck> CrbChecks
        {
            get
            {
                if ((_CrbChecks == null))
                {
                    _CrbChecks = base.CreateObjectSet<CrbCheck>("CrbChecks");
                }
                return _CrbChecks;
            }
        }
        private ObjectSet<CrbCheck> _CrbChecks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Job> Jobs
        {
            get
            {
                if ((_Jobs == null))
                {
                    _Jobs = base.CreateObjectSet<Job>("Jobs");
                }
                return _Jobs;
            }
        }
        private ObjectSet<Job> _Jobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Performance> Performances
        {
            get
            {
                if ((_Performances == null))
                {
                    _Performances = base.CreateObjectSet<Performance>("Performances");
                }
                return _Performances;
            }
        }
        private ObjectSet<Performance> _Performances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Play> Plays
        {
            get
            {
                if ((_Plays == null))
                {
                    _Plays = base.CreateObjectSet<Play>("Plays");
                }
                return _Plays;
            }
        }
        private ObjectSet<Play> _Plays;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayVolunteer> PlayVolunteers
        {
            get
            {
                if ((_PlayVolunteers == null))
                {
                    _PlayVolunteers = base.CreateObjectSet<PlayVolunteer>("PlayVolunteers");
                }
                return _PlayVolunteers;
            }
        }
        private ObjectSet<PlayVolunteer> _PlayVolunteers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Production> Productions
        {
            get
            {
                if ((_Productions == null))
                {
                    _Productions = base.CreateObjectSet<Production>("Productions");
                }
                return _Productions;
            }
        }
        private ObjectSet<Production> _Productions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductionVolunteer> ProductionVolunteers
        {
            get
            {
                if ((_ProductionVolunteers == null))
                {
                    _ProductionVolunteers = base.CreateObjectSet<ProductionVolunteer>("ProductionVolunteers");
                }
                return _ProductionVolunteers;
            }
        }
        private ObjectSet<ProductionVolunteer> _ProductionVolunteers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Student> Students
        {
            get
            {
                if ((_Students == null))
                {
                    _Students = base.CreateObjectSet<Student>("Students");
                }
                return _Students;
            }
        }
        private ObjectSet<Student> _Students;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Term> Terms
        {
            get
            {
                if ((_Terms == null))
                {
                    _Terms = base.CreateObjectSet<Term>("Terms");
                }
                return _Terms;
            }
        }
        private ObjectSet<Term> _Terms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Volunteer> Volunteers
        {
            get
            {
                if ((_Volunteers == null))
                {
                    _Volunteers = base.CreateObjectSet<Volunteer>("Volunteers");
                }
                return _Volunteers;
            }
        }
        private ObjectSet<Volunteer> _Volunteers;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Courses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourses(Course course)
        {
            base.AddObject("Courses", course);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CourseAttendances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourseAttendances(CourseAttendance courseAttendance)
        {
            base.AddObject("CourseAttendances", courseAttendance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CourseTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourseTypes(CourseType courseType)
        {
            base.AddObject("CourseTypes", courseType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CourseVolunteers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourseVolunteers(CourseVolunteer courseVolunteer)
        {
            base.AddObject("CourseVolunteers", courseVolunteer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CrbChecks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCrbChecks(CrbCheck crbCheck)
        {
            base.AddObject("CrbChecks", crbCheck);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Jobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobs(Job job)
        {
            base.AddObject("Jobs", job);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Performances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformances(Performance performance)
        {
            base.AddObject("Performances", performance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Plays EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlays(Play play)
        {
            base.AddObject("Plays", play);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayVolunteers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayVolunteers(PlayVolunteer playVolunteer)
        {
            base.AddObject("PlayVolunteers", playVolunteer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Productions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductions(Production production)
        {
            base.AddObject("Productions", production);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductionVolunteers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductionVolunteers(ProductionVolunteer productionVolunteer)
        {
            base.AddObject("ProductionVolunteers", productionVolunteer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Students EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudents(Student student)
        {
            base.AddObject("Students", student);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Terms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTerms(Term term)
        {
            base.AddObject("Terms", term);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Volunteers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVolunteers(Volunteer volunteer)
        {
            base.AddObject("Volunteers", volunteer);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Course")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Course : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Course object.
        /// </summary>
        /// <param name="courseId">Initial value of the CourseId property.</param>
        public static Course CreateCourse(global::System.Int32 courseId)
        {
            Course course = new Course();
            course.CourseId = courseId;
            return course;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseId
        {
            get
            {
                return _CourseId;
            }
            set
            {
                if (_CourseId != value)
                {
                    OnCourseIdChanging(value);
                    ReportPropertyChanging("CourseId");
                    _CourseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CourseId");
                    OnCourseIdChanged();
                }
            }
        }
        private global::System.Int32 _CourseId;
        partial void OnCourseIdChanging(global::System.Int32 value);
        partial void OnCourseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CourseTypeCode
        {
            get
            {
                return _CourseTypeCode;
            }
            set
            {
                OnCourseTypeCodeChanging(value);
                ReportPropertyChanging("CourseTypeCode");
                _CourseTypeCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CourseTypeCode");
                OnCourseTypeCodeChanged();
            }
        }
        private global::System.String _CourseTypeCode;
        partial void OnCourseTypeCodeChanging(global::System.String value);
        partial void OnCourseTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TermId
        {
            get
            {
                return _TermId;
            }
            set
            {
                OnTermIdChanging(value);
                ReportPropertyChanging("TermId");
                _TermId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TermId");
                OnTermIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TermId;
        partial void OnTermIdChanging(Nullable<global::System.Int32> value);
        partial void OnTermIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int32> _Year;
        partial void OnYearChanging(Nullable<global::System.Int32> value);
        partial void OnYearChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Course_CourseType", "CourseType")]
        public CourseType CourseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CourseType>("Model.FK_Course_CourseType", "CourseType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CourseType>("Model.FK_Course_CourseType", "CourseType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CourseType> CourseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CourseType>("Model.FK_Course_CourseType", "CourseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CourseType>("Model.FK_Course_CourseType", "CourseType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Course_Term", "Term")]
        public Term Term
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Term>("Model.FK_Course_Term", "Term").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Term>("Model.FK_Course_Term", "Term").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Term> TermReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Term>("Model.FK_Course_Term", "Term");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Term>("Model.FK_Course_Term", "Term", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CourseAttendance_Course", "CourseAttendance")]
        public EntityCollection<CourseAttendance> CourseAttendances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CourseAttendance>("Model.FK_CourseAttendance_Course", "CourseAttendance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CourseAttendance>("Model.FK_CourseAttendance_Course", "CourseAttendance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CourseVolunteer_Course", "CourseVolunteer")]
        public EntityCollection<CourseVolunteer> CourseVolunteers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CourseVolunteer>("Model.FK_CourseVolunteer_Course", "CourseVolunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CourseVolunteer>("Model.FK_CourseVolunteer_Course", "CourseVolunteer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="CourseAttendance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CourseAttendance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CourseAttendance object.
        /// </summary>
        /// <param name="studentId">Initial value of the StudentId property.</param>
        /// <param name="courseId">Initial value of the CourseId property.</param>
        public static CourseAttendance CreateCourseAttendance(global::System.Int32 studentId, global::System.Int32 courseId)
        {
            CourseAttendance courseAttendance = new CourseAttendance();
            courseAttendance.StudentId = studentId;
            courseAttendance.CourseId = courseId;
            return courseAttendance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentId
        {
            get
            {
                return _StudentId;
            }
            set
            {
                if (_StudentId != value)
                {
                    OnStudentIdChanging(value);
                    ReportPropertyChanging("StudentId");
                    _StudentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudentId");
                    OnStudentIdChanged();
                }
            }
        }
        private global::System.Int32 _StudentId;
        partial void OnStudentIdChanging(global::System.Int32 value);
        partial void OnStudentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseId
        {
            get
            {
                return _CourseId;
            }
            set
            {
                if (_CourseId != value)
                {
                    OnCourseIdChanging(value);
                    ReportPropertyChanging("CourseId");
                    _CourseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CourseId");
                    OnCourseIdChanged();
                }
            }
        }
        private global::System.Int32 _CourseId;
        partial void OnCourseIdChanging(global::System.Int32 value);
        partial void OnCourseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Completed
        {
            get
            {
                return _Completed;
            }
            set
            {
                OnCompletedChanging(value);
                ReportPropertyChanging("Completed");
                _Completed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Completed");
                OnCompletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Completed;
        partial void OnCompletedChanging(Nullable<global::System.Boolean> value);
        partial void OnCompletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CourseAttendance_Course", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("Model.FK_CourseAttendance_Course", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("Model.FK_CourseAttendance_Course", "Course").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("Model.FK_CourseAttendance_Course", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("Model.FK_CourseAttendance_Course", "Course", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CourseAttendance_Child", "Student")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("Model.FK_CourseAttendance_Child", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("Model.FK_CourseAttendance_Child", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("Model.FK_CourseAttendance_Child", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("Model.FK_CourseAttendance_Child", "Student", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="CourseType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CourseType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CourseType object.
        /// </summary>
        /// <param name="courseTypeCode">Initial value of the CourseTypeCode property.</param>
        public static CourseType CreateCourseType(global::System.String courseTypeCode)
        {
            CourseType courseType = new CourseType();
            courseType.CourseTypeCode = courseTypeCode;
            return courseType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CourseTypeCode
        {
            get
            {
                return _CourseTypeCode;
            }
            set
            {
                if (_CourseTypeCode != value)
                {
                    OnCourseTypeCodeChanging(value);
                    ReportPropertyChanging("CourseTypeCode");
                    _CourseTypeCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CourseTypeCode");
                    OnCourseTypeCodeChanged();
                }
            }
        }
        private global::System.String _CourseTypeCode;
        partial void OnCourseTypeCodeChanging(global::System.String value);
        partial void OnCourseTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CourseTypeName
        {
            get
            {
                return _CourseTypeName;
            }
            set
            {
                OnCourseTypeNameChanging(value);
                ReportPropertyChanging("CourseTypeName");
                _CourseTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CourseTypeName");
                OnCourseTypeNameChanged();
            }
        }
        private global::System.String _CourseTypeName;
        partial void OnCourseTypeNameChanging(global::System.String value);
        partial void OnCourseTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Course_CourseType", "Course")]
        public EntityCollection<Course> Courses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Course>("Model.FK_Course_CourseType", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Course>("Model.FK_Course_CourseType", "Course", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="CourseVolunteer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CourseVolunteer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CourseVolunteer object.
        /// </summary>
        /// <param name="courseId">Initial value of the CourseId property.</param>
        /// <param name="volunteerId">Initial value of the VolunteerId property.</param>
        /// <param name="jobId">Initial value of the JobId property.</param>
        public static CourseVolunteer CreateCourseVolunteer(global::System.Int32 courseId, global::System.Int32 volunteerId, global::System.Int32 jobId)
        {
            CourseVolunteer courseVolunteer = new CourseVolunteer();
            courseVolunteer.CourseId = courseId;
            courseVolunteer.VolunteerId = volunteerId;
            courseVolunteer.JobId = jobId;
            return courseVolunteer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseId
        {
            get
            {
                return _CourseId;
            }
            set
            {
                if (_CourseId != value)
                {
                    OnCourseIdChanging(value);
                    ReportPropertyChanging("CourseId");
                    _CourseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CourseId");
                    OnCourseIdChanged();
                }
            }
        }
        private global::System.Int32 _CourseId;
        partial void OnCourseIdChanging(global::System.Int32 value);
        partial void OnCourseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VolunteerId
        {
            get
            {
                return _VolunteerId;
            }
            set
            {
                if (_VolunteerId != value)
                {
                    OnVolunteerIdChanging(value);
                    ReportPropertyChanging("VolunteerId");
                    _VolunteerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VolunteerId");
                    OnVolunteerIdChanged();
                }
            }
        }
        private global::System.Int32 _VolunteerId;
        partial void OnVolunteerIdChanging(global::System.Int32 value);
        partial void OnVolunteerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                if (_JobId != value)
                {
                    OnJobIdChanging(value);
                    ReportPropertyChanging("JobId");
                    _JobId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobId");
                    OnJobIdChanged();
                }
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CourseVolunteer_Course", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("Model.FK_CourseVolunteer_Course", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("Model.FK_CourseVolunteer_Course", "Course").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("Model.FK_CourseVolunteer_Course", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("Model.FK_CourseVolunteer_Course", "Course", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CourseVolunteer_Job", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Model.FK_CourseVolunteer_Job", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Model.FK_CourseVolunteer_Job", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Model.FK_CourseVolunteer_Job", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("Model.FK_CourseVolunteer_Job", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CourseVolunteer_Volunteer", "Volunteer")]
        public Volunteer Volunteer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Volunteer>("Model.FK_CourseVolunteer_Volunteer", "Volunteer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Volunteer>("Model.FK_CourseVolunteer_Volunteer", "Volunteer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Volunteer> VolunteerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Volunteer>("Model.FK_CourseVolunteer_Volunteer", "Volunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Volunteer>("Model.FK_CourseVolunteer_Volunteer", "Volunteer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="CrbCheck")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CrbCheck : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CrbCheck object.
        /// </summary>
        /// <param name="crbCheckId">Initial value of the CrbCheckId property.</param>
        public static CrbCheck CreateCrbCheck(global::System.Int32 crbCheckId)
        {
            CrbCheck crbCheck = new CrbCheck();
            crbCheck.CrbCheckId = crbCheckId;
            return crbCheck;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CrbCheckId
        {
            get
            {
                return _CrbCheckId;
            }
            set
            {
                if (_CrbCheckId != value)
                {
                    OnCrbCheckIdChanging(value);
                    ReportPropertyChanging("CrbCheckId");
                    _CrbCheckId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CrbCheckId");
                    OnCrbCheckIdChanged();
                }
            }
        }
        private global::System.Int32 _CrbCheckId;
        partial void OnCrbCheckIdChanging(global::System.Int32 value);
        partial void OnCrbCheckIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VolunteerId
        {
            get
            {
                return _VolunteerId;
            }
            set
            {
                OnVolunteerIdChanging(value);
                ReportPropertyChanging("VolunteerId");
                _VolunteerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VolunteerId");
                OnVolunteerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VolunteerId;
        partial void OnVolunteerIdChanging(Nullable<global::System.Int32> value);
        partial void OnVolunteerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CheckDate
        {
            get
            {
                return _CheckDate;
            }
            set
            {
                OnCheckDateChanging(value);
                ReportPropertyChanging("CheckDate");
                _CheckDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckDate");
                OnCheckDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CheckDate;
        partial void OnCheckDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCheckDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CrbNumber
        {
            get
            {
                return _CrbNumber;
            }
            set
            {
                OnCrbNumberChanging(value);
                ReportPropertyChanging("CrbNumber");
                _CrbNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CrbNumber");
                OnCrbNumberChanged();
            }
        }
        private global::System.String _CrbNumber;
        partial void OnCrbNumberChanging(global::System.String value);
        partial void OnCrbNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OnlineFormSent
        {
            get
            {
                return _OnlineFormSent;
            }
            set
            {
                OnOnlineFormSentChanging(value);
                ReportPropertyChanging("OnlineFormSent");
                _OnlineFormSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OnlineFormSent");
                OnOnlineFormSentChanged();
            }
        }
        private Nullable<global::System.DateTime> _OnlineFormSent;
        partial void OnOnlineFormSentChanging(Nullable<global::System.DateTime> value);
        partial void OnOnlineFormSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FormFilledOut
        {
            get
            {
                return _FormFilledOut;
            }
            set
            {
                OnFormFilledOutChanging(value);
                ReportPropertyChanging("FormFilledOut");
                _FormFilledOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormFilledOut");
                OnFormFilledOutChanged();
            }
        }
        private Nullable<global::System.DateTime> _FormFilledOut;
        partial void OnFormFilledOutChanging(Nullable<global::System.DateTime> value);
        partial void OnFormFilledOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCheckExpires
        {
            get
            {
                return _DateCheckExpires;
            }
            set
            {
                OnDateCheckExpiresChanging(value);
                ReportPropertyChanging("DateCheckExpires");
                _DateCheckExpires = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCheckExpires");
                OnDateCheckExpiresChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCheckExpires;
        partial void OnDateCheckExpiresChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCheckExpiresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IdComplete
        {
            get
            {
                return _IdComplete;
            }
            set
            {
                OnIdCompleteChanging(value);
                ReportPropertyChanging("IdComplete");
                _IdComplete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdComplete");
                OnIdCompleteChanged();
            }
        }
        private Nullable<global::System.DateTime> _IdComplete;
        partial void OnIdCompleteChanging(Nullable<global::System.DateTime> value);
        partial void OnIdCompleteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CrbCheck_Volunteer", "Volunteer")]
        public Volunteer Volunteer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Volunteer>("Model.FK_CrbCheck_Volunteer", "Volunteer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Volunteer>("Model.FK_CrbCheck_Volunteer", "Volunteer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Volunteer> VolunteerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Volunteer>("Model.FK_CrbCheck_Volunteer", "Volunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Volunteer>("Model.FK_CrbCheck_Volunteer", "Volunteer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Job")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Job : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job object.
        /// </summary>
        /// <param name="jobId">Initial value of the JobId property.</param>
        public static Job CreateJob(global::System.Int32 jobId)
        {
            Job job = new Job();
            job.JobId = jobId;
            return job;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                if (_JobId != value)
                {
                    OnJobIdChanging(value);
                    ReportPropertyChanging("JobId");
                    _JobId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobId");
                    OnJobIdChanged();
                }
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CourseVolunteer_Job", "CourseVolunteer")]
        public EntityCollection<CourseVolunteer> CourseVolunteers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CourseVolunteer>("Model.FK_CourseVolunteer_Job", "CourseVolunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CourseVolunteer>("Model.FK_CourseVolunteer_Job", "CourseVolunteer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PlayVolunteer_Job", "PlayVolunteer")]
        public EntityCollection<PlayVolunteer> PlayVolunteers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayVolunteer>("Model.FK_PlayVolunteer_Job", "PlayVolunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayVolunteer>("Model.FK_PlayVolunteer_Job", "PlayVolunteer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProductionVolunteer_Job", "ProductionVolunteer")]
        public EntityCollection<ProductionVolunteer> ProductionVolunteers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductionVolunteer>("Model.FK_ProductionVolunteer_Job", "ProductionVolunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductionVolunteer>("Model.FK_ProductionVolunteer_Job", "ProductionVolunteer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "VolunteerCapability", "Volunteer")]
        public EntityCollection<Volunteer> Volunteers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Volunteer>("Model.VolunteerCapability", "Volunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Volunteer>("Model.VolunteerCapability", "Volunteer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Performance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Performance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Performance object.
        /// </summary>
        /// <param name="performanceId">Initial value of the PerformanceId property.</param>
        public static Performance CreatePerformance(global::System.Int32 performanceId)
        {
            Performance performance = new Performance();
            performance.PerformanceId = performanceId;
            return performance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceId
        {
            get
            {
                return _PerformanceId;
            }
            set
            {
                if (_PerformanceId != value)
                {
                    OnPerformanceIdChanging(value);
                    ReportPropertyChanging("PerformanceId");
                    _PerformanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PerformanceId");
                    OnPerformanceIdChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceId;
        partial void OnPerformanceIdChanging(global::System.Int32 value);
        partial void OnPerformanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductionId
        {
            get
            {
                return _ProductionId;
            }
            set
            {
                OnProductionIdChanging(value);
                ReportPropertyChanging("ProductionId");
                _ProductionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductionId");
                OnProductionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductionId;
        partial void OnProductionIdChanging(Nullable<global::System.Int32> value);
        partial void OnProductionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PerformanceDateTime
        {
            get
            {
                return _PerformanceDateTime;
            }
            set
            {
                OnPerformanceDateTimeChanging(value);
                ReportPropertyChanging("PerformanceDateTime");
                _PerformanceDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerformanceDateTime");
                OnPerformanceDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _PerformanceDateTime;
        partial void OnPerformanceDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnPerformanceDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventBriteId
        {
            get
            {
                return _EventBriteId;
            }
            set
            {
                OnEventBriteIdChanging(value);
                ReportPropertyChanging("EventBriteId");
                _EventBriteId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EventBriteId");
                OnEventBriteIdChanged();
            }
        }
        private global::System.String _EventBriteId;
        partial void OnEventBriteIdChanging(global::System.String value);
        partial void OnEventBriteIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Performance_Production", "Production")]
        public Production Production
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Production>("Model.FK_Performance_Production", "Production").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Production>("Model.FK_Performance_Production", "Production").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Production> ProductionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Production>("Model.FK_Performance_Production", "Production");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Production>("Model.FK_Performance_Production", "Production", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Play")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Play : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Play object.
        /// </summary>
        /// <param name="playId">Initial value of the PlayId property.</param>
        /// <param name="studentId">Initial value of the StudentId property.</param>
        public static Play CreatePlay(global::System.Int32 playId, global::System.Int32 studentId)
        {
            Play play = new Play();
            play.PlayId = playId;
            play.StudentId = studentId;
            return play;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayId
        {
            get
            {
                return _PlayId;
            }
            set
            {
                if (_PlayId != value)
                {
                    OnPlayIdChanging(value);
                    ReportPropertyChanging("PlayId");
                    _PlayId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayId");
                    OnPlayIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayId;
        partial void OnPlayIdChanging(global::System.Int32 value);
        partial void OnPlayIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentId
        {
            get
            {
                return _StudentId;
            }
            set
            {
                OnStudentIdChanging(value);
                ReportPropertyChanging("StudentId");
                _StudentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentId");
                OnStudentIdChanged();
            }
        }
        private global::System.Int32 _StudentId;
        partial void OnStudentIdChanging(global::System.Int32 value);
        partial void OnStudentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PlayVolunteer_Play", "PlayVolunteer")]
        public EntityCollection<PlayVolunteer> PlayVolunteers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayVolunteer>("Model.FK_PlayVolunteer_Play", "PlayVolunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayVolunteer>("Model.FK_PlayVolunteer_Play", "PlayVolunteer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PlayVolunteer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayVolunteer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayVolunteer object.
        /// </summary>
        /// <param name="playId">Initial value of the PlayId property.</param>
        /// <param name="volunteerId">Initial value of the VolunteerId property.</param>
        /// <param name="jobId">Initial value of the JobId property.</param>
        public static PlayVolunteer CreatePlayVolunteer(global::System.Int32 playId, global::System.Int32 volunteerId, global::System.Int32 jobId)
        {
            PlayVolunteer playVolunteer = new PlayVolunteer();
            playVolunteer.PlayId = playId;
            playVolunteer.VolunteerId = volunteerId;
            playVolunteer.JobId = jobId;
            return playVolunteer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayId
        {
            get
            {
                return _PlayId;
            }
            set
            {
                if (_PlayId != value)
                {
                    OnPlayIdChanging(value);
                    ReportPropertyChanging("PlayId");
                    _PlayId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayId");
                    OnPlayIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayId;
        partial void OnPlayIdChanging(global::System.Int32 value);
        partial void OnPlayIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VolunteerId
        {
            get
            {
                return _VolunteerId;
            }
            set
            {
                if (_VolunteerId != value)
                {
                    OnVolunteerIdChanging(value);
                    ReportPropertyChanging("VolunteerId");
                    _VolunteerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VolunteerId");
                    OnVolunteerIdChanged();
                }
            }
        }
        private global::System.Int32 _VolunteerId;
        partial void OnVolunteerIdChanging(global::System.Int32 value);
        partial void OnVolunteerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                if (_JobId != value)
                {
                    OnJobIdChanging(value);
                    ReportPropertyChanging("JobId");
                    _JobId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobId");
                    OnJobIdChanged();
                }
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PlayVolunteer_Job", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Model.FK_PlayVolunteer_Job", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Model.FK_PlayVolunteer_Job", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Model.FK_PlayVolunteer_Job", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("Model.FK_PlayVolunteer_Job", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PlayVolunteer_Play", "Play")]
        public Play Play
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Play>("Model.FK_PlayVolunteer_Play", "Play").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Play>("Model.FK_PlayVolunteer_Play", "Play").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Play> PlayReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Play>("Model.FK_PlayVolunteer_Play", "Play");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Play>("Model.FK_PlayVolunteer_Play", "Play", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PlayVolunteer_Volunteer", "Volunteer")]
        public Volunteer Volunteer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Volunteer>("Model.FK_PlayVolunteer_Volunteer", "Volunteer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Volunteer>("Model.FK_PlayVolunteer_Volunteer", "Volunteer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Volunteer> VolunteerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Volunteer>("Model.FK_PlayVolunteer_Volunteer", "Volunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Volunteer>("Model.FK_PlayVolunteer_Volunteer", "Volunteer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Production")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Production : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Production object.
        /// </summary>
        /// <param name="productionId">Initial value of the ProductionId property.</param>
        public static Production CreateProduction(global::System.Int32 productionId)
        {
            Production production = new Production();
            production.ProductionId = productionId;
            return production;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductionId
        {
            get
            {
                return _ProductionId;
            }
            set
            {
                if (_ProductionId != value)
                {
                    OnProductionIdChanging(value);
                    ReportPropertyChanging("ProductionId");
                    _ProductionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductionId");
                    OnProductionIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductionId;
        partial void OnProductionIdChanging(global::System.Int32 value);
        partial void OnProductionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProductionVolunteer_Production", "ProductionVolunteer")]
        public EntityCollection<ProductionVolunteer> ProductionVolunteers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductionVolunteer>("Model.FK_ProductionVolunteer_Production", "ProductionVolunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductionVolunteer>("Model.FK_ProductionVolunteer_Production", "ProductionVolunteer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Performance_Production", "Performance")]
        public EntityCollection<Performance> Performances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Performance>("Model.FK_Performance_Production", "Performance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Performance>("Model.FK_Performance_Production", "Performance", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ProductionVolunteer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductionVolunteer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductionVolunteer object.
        /// </summary>
        /// <param name="volunteerId">Initial value of the VolunteerId property.</param>
        /// <param name="jobId">Initial value of the JobId property.</param>
        /// <param name="productionId">Initial value of the ProductionId property.</param>
        public static ProductionVolunteer CreateProductionVolunteer(global::System.Int32 volunteerId, global::System.Int32 jobId, global::System.Int32 productionId)
        {
            ProductionVolunteer productionVolunteer = new ProductionVolunteer();
            productionVolunteer.VolunteerId = volunteerId;
            productionVolunteer.JobId = jobId;
            productionVolunteer.ProductionId = productionId;
            return productionVolunteer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VolunteerId
        {
            get
            {
                return _VolunteerId;
            }
            set
            {
                if (_VolunteerId != value)
                {
                    OnVolunteerIdChanging(value);
                    ReportPropertyChanging("VolunteerId");
                    _VolunteerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VolunteerId");
                    OnVolunteerIdChanged();
                }
            }
        }
        private global::System.Int32 _VolunteerId;
        partial void OnVolunteerIdChanging(global::System.Int32 value);
        partial void OnVolunteerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                if (_JobId != value)
                {
                    OnJobIdChanging(value);
                    ReportPropertyChanging("JobId");
                    _JobId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobId");
                    OnJobIdChanged();
                }
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductionId
        {
            get
            {
                return _ProductionId;
            }
            set
            {
                if (_ProductionId != value)
                {
                    OnProductionIdChanging(value);
                    ReportPropertyChanging("ProductionId");
                    _ProductionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductionId");
                    OnProductionIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductionId;
        partial void OnProductionIdChanging(global::System.Int32 value);
        partial void OnProductionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProductionVolunteer_Job", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Model.FK_ProductionVolunteer_Job", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Model.FK_ProductionVolunteer_Job", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Model.FK_ProductionVolunteer_Job", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("Model.FK_ProductionVolunteer_Job", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProductionVolunteer_Production", "Production")]
        public Production Production
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Production>("Model.FK_ProductionVolunteer_Production", "Production").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Production>("Model.FK_ProductionVolunteer_Production", "Production").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Production> ProductionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Production>("Model.FK_ProductionVolunteer_Production", "Production");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Production>("Model.FK_ProductionVolunteer_Production", "Production", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProductionVolunteer_Volunteer", "Volunteer")]
        public Volunteer Volunteer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Volunteer>("Model.FK_ProductionVolunteer_Volunteer", "Volunteer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Volunteer>("Model.FK_ProductionVolunteer_Volunteer", "Volunteer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Volunteer> VolunteerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Volunteer>("Model.FK_ProductionVolunteer_Volunteer", "Volunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Volunteer>("Model.FK_ProductionVolunteer_Volunteer", "Volunteer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="childId">Initial value of the ChildId property.</param>
        /// <param name="reference">Initial value of the Reference property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        public static Student CreateStudent(global::System.Int32 childId, global::System.String reference, global::System.String surname)
        {
            Student student = new Student();
            student.ChildId = childId;
            student.Reference = reference;
            student.Surname = surname;
            return student;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChildId
        {
            get
            {
                return _ChildId;
            }
            set
            {
                if (_ChildId != value)
                {
                    OnChildIdChanging(value);
                    ReportPropertyChanging("ChildId");
                    _ChildId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChildId");
                    OnChildIdChanged();
                }
            }
        }
        private global::System.Int32 _ChildId;
        partial void OnChildIdChanging(global::System.Int32 value);
        partial void OnChildIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.String _Reference;
        partial void OnReferenceChanging(global::System.String value);
        partial void OnReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CourseAttendance_Child", "CourseAttendance")]
        public EntityCollection<CourseAttendance> CourseAttendances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CourseAttendance>("Model.FK_CourseAttendance_Child", "CourseAttendance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CourseAttendance>("Model.FK_CourseAttendance_Child", "CourseAttendance", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Term")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Term : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Term object.
        /// </summary>
        /// <param name="termId">Initial value of the TermId property.</param>
        public static Term CreateTerm(global::System.Int32 termId)
        {
            Term term = new Term();
            term.TermId = termId;
            return term;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TermId
        {
            get
            {
                return _TermId;
            }
            set
            {
                if (_TermId != value)
                {
                    OnTermIdChanging(value);
                    ReportPropertyChanging("TermId");
                    _TermId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TermId");
                    OnTermIdChanged();
                }
            }
        }
        private global::System.Int32 _TermId;
        partial void OnTermIdChanging(global::System.Int32 value);
        partial void OnTermIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermName
        {
            get
            {
                return _TermName;
            }
            set
            {
                OnTermNameChanging(value);
                ReportPropertyChanging("TermName");
                _TermName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermName");
                OnTermNameChanged();
            }
        }
        private global::System.String _TermName;
        partial void OnTermNameChanging(global::System.String value);
        partial void OnTermNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Course_Term", "Course")]
        public EntityCollection<Course> Courses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Course>("Model.FK_Course_Term", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Course>("Model.FK_Course_Term", "Course", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Volunteer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Volunteer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Volunteer object.
        /// </summary>
        /// <param name="volunteerId">Initial value of the VolunteerId property.</param>
        public static Volunteer CreateVolunteer(global::System.Int32 volunteerId)
        {
            Volunteer volunteer = new Volunteer();
            volunteer.VolunteerId = volunteerId;
            return volunteer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VolunteerId
        {
            get
            {
                return _VolunteerId;
            }
            set
            {
                if (_VolunteerId != value)
                {
                    OnVolunteerIdChanging(value);
                    ReportPropertyChanging("VolunteerId");
                    _VolunteerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VolunteerId");
                    OnVolunteerIdChanged();
                }
            }
        }
        private global::System.Int32 _VolunteerId;
        partial void OnVolunteerIdChanging(global::System.Int32 value);
        partial void OnVolunteerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PerformanceAttended
        {
            get
            {
                return _PerformanceAttended;
            }
            set
            {
                OnPerformanceAttendedChanging(value);
                ReportPropertyChanging("PerformanceAttended");
                _PerformanceAttended = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PerformanceAttended");
                OnPerformanceAttendedChanged();
            }
        }
        private global::System.String _PerformanceAttended;
        partial void OnPerformanceAttendedChanging(global::System.String value);
        partial void OnPerformanceAttendedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CourseVolunteer_Volunteer", "CourseVolunteer")]
        public EntityCollection<CourseVolunteer> CourseVolunteers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CourseVolunteer>("Model.FK_CourseVolunteer_Volunteer", "CourseVolunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CourseVolunteer>("Model.FK_CourseVolunteer_Volunteer", "CourseVolunteer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CrbCheck_Volunteer", "CrbCheck")]
        public EntityCollection<CrbCheck> CrbChecks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CrbCheck>("Model.FK_CrbCheck_Volunteer", "CrbCheck");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CrbCheck>("Model.FK_CrbCheck_Volunteer", "CrbCheck", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PlayVolunteer_Volunteer", "PlayVolunteer")]
        public EntityCollection<PlayVolunteer> PlayVolunteers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayVolunteer>("Model.FK_PlayVolunteer_Volunteer", "PlayVolunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayVolunteer>("Model.FK_PlayVolunteer_Volunteer", "PlayVolunteer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProductionVolunteer_Volunteer", "ProductionVolunteer")]
        public EntityCollection<ProductionVolunteer> ProductionVolunteers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductionVolunteer>("Model.FK_ProductionVolunteer_Volunteer", "ProductionVolunteer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductionVolunteer>("Model.FK_ProductionVolunteer_Volunteer", "ProductionVolunteer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "VolunteerCapability", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("Model.VolunteerCapability", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("Model.VolunteerCapability", "Job", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
