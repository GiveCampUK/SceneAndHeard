@model SceneCrm.Entities.Volunteer
@* This partial view defines form fields that will appear when creating and editing entities *@
<div class="editor-label">
    First Name
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.FirstName)
    @Html.ValidationMessageFor(model => model.FirstName)
</div>
<div class="editor-label">
    @Html.LabelFor(model => model.Surname)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Surname)
    @Html.ValidationMessageFor(model => model.Surname)
</div>
<div class="editor-label">
    Performance Attended
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.PerformanceAttended)
    @Html.ValidationMessageFor(model => model.PerformanceAttended)
</div>
<div class="editor-label">
    Referred By
</div>
<div class="editor-field">
    <style>
        .ui-autocomplete-loading
        {
            background: white url('images/ui-anim_basic_16x16.gif') right center no-repeat;
        }
        #city
        {
            width: 25em;
        }
    </style>
    @Html.HiddenFor(model => model.ReferredByVolunteerId)
    
    <input id="referee" type="text" name="referee" />
</div>
<script>
    $(function () {
        function log(message) {
            $("<div/>").text(message).prependTo("#log");
            $("#log").scrollTop(0);
        }

        $("#referee").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "http://localhost:54108/Volunteer/AllVolunteers",
                    dataType: "json",
                    data: {
                        featureClass: "P",
                        style: "full",
                        maxRows: 12,
                        pleaseWork: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.Name,
                                value: item.Id
                            }
                        }));
                    }
                });
            },
            minLength: 2,
            select: function (event, ui) {
                $("#ReferredByVolunteerId").value = ui.item.value;
                $("#referee").value = ui.item.label;
            },
            open: function () {
                $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
            },
            close: function () {
                $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
            }
        });
    });
    </script>

<div class="editor-label">
    Available From
</div>
<div class="editor-field">
    <script>
        $(function () {
            $("#AvailableFrom").datepicker($.datepicker.regional['en-GB']);
        });
    </script>
    @Html.EditorFor(model => model.AvailableFrom)
    @Html.ValidationMessageFor(model => model.AvailableFrom)
</div>
